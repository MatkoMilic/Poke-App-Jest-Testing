// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  collapsable={false}
  pointerEvents="box-none"
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RNCSafeAreaProvider
    onInsetsChange={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <RNSScreenStack
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <RNSScreen
        forwardedRef={[Function]}
        onAppear={[Function]}
        onDisappear={[Function]}
        onDismissed={[Function]}
        onWillDisappear={[Function]}
        replaceAnimation="push"
        stackPresentation="push"
        style={
          Object {
            "bottom": 0,
            "left": 0,
            "position": "absolute",
            "right": 0,
            "top": 0,
          }
        }
      >
        <RNSScreenStackHeaderConfig
          backButtonInCustomView={false}
          backgroundColor="rgb(255, 255, 255)"
          color="rgb(0, 122, 255)"
          direction="ltr"
          disableBackButtonMenu={false}
          hidden={true}
          hideBackButton={false}
          hideShadow={false}
          largeTitleHideShadow={false}
          title="ONBOARDING_NAVIGATOR"
          titleColor="rgb(28, 28, 30)"
          topInsetEnabled={false}
          translucent={false}
        />
        <View
          style={
            Array [
              Object {
                "flex": 1,
              },
              Object {
                "backgroundColor": "rgb(242, 242, 242)",
              },
              undefined,
            ]
          }
        >
          <View
            style={
              Array [
                Object {
                  "flex": 1,
                },
                undefined,
              ]
            }
          >
            <RNSScreenStack
              style={
                Object {
                  "flex": 1,
                }
              }
            >
              <RNSScreen
                forwardedRef={[Function]}
                onAppear={[Function]}
                onDisappear={[Function]}
                onDismissed={[Function]}
                onWillDisappear={[Function]}
                replaceAnimation="push"
                stackPresentation="push"
                style={
                  Object {
                    "bottom": 0,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <RNSScreenStackHeaderConfig
                  backButtonInCustomView={false}
                  backgroundColor="rgb(255, 255, 255)"
                  color="rgb(0, 122, 255)"
                  direction="ltr"
                  disableBackButtonMenu={false}
                  hidden={true}
                  hideBackButton={false}
                  hideShadow={false}
                  largeTitleHideShadow={false}
                  title="LOADING_SCREEN"
                  titleColor="rgb(28, 28, 30)"
                  topInsetEnabled={false}
                  translucent={false}
                />
                <View
                  style={
                    Array [
                      Object {
                        "flex": 1,
                      },
                      Object {
                        "backgroundColor": "rgb(242, 242, 242)",
                      },
                      undefined,
                    ]
                  }
                >
                  <RNCSafeAreaView>
                    <View
                      accessible={true}
                      focusable={false}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        accessible={true}
                        focusable={true}
                        onClick={[Function]}
                        onResponderGrant={[Function]}
                        onResponderMove={[Function]}
                        onResponderRelease={[Function]}
                        onResponderTerminate={[Function]}
                        onResponderTerminationRequest={[Function]}
                        onStartShouldSetResponder={[Function]}
                        style={
                          Object {
                            "opacity": 1,
                          }
                        }
                      >
                        <Text>
                          false
                        </Text>
                      </View>
                    </View>
                    <Text
                      style={
                        Object {
                          "color": "red",
                        }
                      }
                    >
                      Loading & theme is: 
                      light
                    </Text>
                    <View
                      accessibilityRole="button"
                      accessibilityState={Object {}}
                      accessible={true}
                      focusable={true}
                      onClick={[Function]}
                      onResponderGrant={[Function]}
                      onResponderMove={[Function]}
                      onResponderRelease={[Function]}
                      onResponderTerminate={[Function]}
                      onResponderTerminationRequest={[Function]}
                      onStartShouldSetResponder={[Function]}
                      style={
                        Object {
                          "opacity": 1,
                        }
                      }
                    >
                      <View
                        style={
                          Array [
                            Object {},
                          ]
                        }
                      >
                        <Text
                          style={
                            Array [
                              Object {
                                "color": "#007AFF",
                                "fontSize": 18,
                                "margin": 8,
                                "textAlign": "center",
                              },
                            ]
                          }
                        >
                          Go To Profile Screen
                        </Text>
                      </View>
                    </View>
                  </RNCSafeAreaView>
                </View>
              </RNSScreen>
            </RNSScreenStack>
          </View>
        </View>
      </RNSScreen>
    </RNSScreenStack>
  </RNCSafeAreaProvider>
</View>
`;
